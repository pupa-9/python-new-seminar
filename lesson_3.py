# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N]. 
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X

""" A = []  # заводим пустой список
n = int(input("Введите количество элементов в списке: "))  # считываем количество элемент в списке
X = int(input("Введите некоторое число: ")) 
for i in range(n):  
    k = int(input())  # считываем очередной элемент
    A.append(k)  # добавляем его в список
    # последние две строки можно было заменить одной:
    # a.append(int(input()))
print(A.count(X)) """


#A = [int(i) for i in input("Введите список чисел, перечисляя их через пробел: ").split()] #заполним список
#x = int(input("Введите число, количество которого нужно подсчитать: ")) #пользователь вводит число, количество вхождений которого нужно подсчитать
#print(A.count(x)) #выводим количество вхождений числа X в список A



# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X. 
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X

""" N = abs(int(input('Введите количество элементов списка А: ')))
A_1 = input("Введите через пробел элементы списка: ").split()
A = list(map(int, A_1))
if len(A) != N or N == 0:
    print('Введенные элементы не соответствуют заявленному количеству!')
else:
    X = int(input('Введите число X, с которым необходимо сравнивать элементы списка: '))
    min = abs(X - A[0])
    index = 0
    for i in range(1, N):
        count = abs(X - A[i])
        if count < min:
            min = count
            index = i
    print(f'Число {A[index]} в списке A наиболее близко по величине к числу {X}') """



    # Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет
# определенную ценность. В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко; D, G – 2 очка; B, C, M, P – 3 очка; F, H, V, W, Y – 4 очка; K – 5 очков;
# J, X – 8 очков; Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко; Д, К, Л, М, П, У – 2 очка; Б, Г, Ё, Ь, Я – 3 очка; Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков; Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо
# только английские, либо только русские буквы.

""" eng = {1:'AEIOULNSTR',
      	2:'DG',
      	3:'BCMP',
      	4:'FHVWY',
      	5:'K',
      	8:'JZ',
      	10:'QZ'}

rus = {1:'АВЕИНОРСТ',
      	2:'ДКЛМПУ',
      	3:'БГЁЬЯ',
      	4:'ЙЫ',
      	5:'ЖЗХЦЧ',
      	8:'ШЭЮ',
      	10:'ФЩЪ'}
N = int(input('Введите 1, если играем в английской раскладке, либо 0, если в русской: '))
word = input('Введите слово: ').upper()
sum = 0
if N==0:
    for i in word:
        for k, v in rus.items():
            if i in v:
                sum = sum + k
    print('За это слово вы получаете', sum, 'очков')
elif N==1:
    for i in word:
        for k, v in eng.items():
            if i in v:
                sum = sum + k
    print('За это слово вы получаете', sum, 'очков')
else:
    print("Возможно вы совершили ошибку, при запуске программы введите верное значение раскладки и слово") """